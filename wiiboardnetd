#!/usr/bin/env python

from bottle import route, run
import sqlite3
import json

@route('/')
@route('/index')
def index():
    return '''<!DOCTYPE html>
 <html>
    <head>
        <title>Weight Data</title>
        <script
			  src="https://code.jquery.com/jquery-3.1.0.min.js"
			  integrity="sha256-cCueBR6CsyA4/9szpPfrX3s49M9vUU5BgtiJj06wt/s="
			  crossorigin="anonymous"></script>
        <script type="text/javascript" src="http://code.highcharts.com/stock/highstock.js"></script>
        <script type="text/javascript" src="http://code.highcharts.com/stock/modules/exporting.js"></script>
        <script type="text/javascript">            
            function CreateChart(weightdata) {
                $("#chart").highcharts("StockChart", {
                    title: {
                        text : "Weight over time"
                    },
                    rangeSelector: {
                        selected: 2
                    },
                    credits: {
                        href: "http://github.com/Ryan-Myers",
                        text: "Ryan Myers"
                    },
                    series: [{
                        name : "Weight in lbs",
                        data : weightdata,
                        tooltip: {
                            valueDecimals: 2
                        }
                    }]
                });
            }
            
            $(function() {
                $.getJSON("/get_data", function(weightdata) {
                    CreateChart(weightdata);
                });
            });
        </script>
    </head>
    <body>
        <div id="chart">Retrieving Weight Data...</div>
    </body>
</html>
'''

@route('/get_data')
def get_data():
    SQLCONN = sqlite3.connect('/etc/wiiboardnet/w8.db')
    sqlcurs = SQLCONN.cursor()

    sqlcurs.execute("SELECT CAST(strftime('%s', timestamp) AS INTEGER) * 1000 AS timestamp, (weight * 2.20462) AS weight FROM w8upd8 LIMIT 1000")
    results = sqlcurs.fetchall()

    sqlcurs.close()
    SQLCONN.close()
    
    return json.dumps(results)

run(host='192.168.1.97', port=80)
